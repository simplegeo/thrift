Index: debian/changelog
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ debian/changelog	2009-02-12 11:20:14.000000000 +0100
@@ -0,0 +1,5 @@
+thrift (0.2008.12.30~8.04) hardy; urgency=low
+
+  * Initial release.
+
+ -- Esteve Fernandez <esteve@fluidinfo.com>  Thu, 15 Jan 2009 11:34:24 +0100
Index: debian/compat
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ debian/compat	2009-02-12 11:20:14.000000000 +0100
@@ -0,0 +1 @@
+5
Index: debian/control
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ debian/control	2009-02-12 11:20:14.000000000 +0100
@@ -0,0 +1,167 @@
+Source: thrift
+Section: devel
+Priority: extra
+Build-Depends: debhelper (>= 5), build-essential, mono-gmcs, python-dev, ant,
+    libmono-dev, erlang-base, ruby1.8-dev, autoconf, python-support, automake,
+    pkg-config, libtool, bison, flex, libboost-dev, python-all, python-all-dev,
+    python-all-dbg, ruby, openjdk-6-jdk | java-sdk, libcommons-lang-java,
+    libboost-test-dev, libevent-dev, perl (>= 5.8.0-7)
+Maintainer: Esteve Fernandez <esteve@fluidinfo.com>
+Standards-Version: 3.7.2
+XS-Python-Version: 2.4, 2.5
+
+Package: thrift-compiler
+Architecture: any
+Depends: ${shlibs:Depends}, ${misc:Depends}
+Description: Compiler for Thrift definition files
+ Thrift is a software framework for scalable cross-language services
+ development. It combines a software stack with a code generation engine to
+ build services that work efficiently and seamlessly.
+ .
+ Thrift came out of Facebook and is now an Apache Software Foundation project.
+ .
+ This package contains the Thrift compiler that is used for translating from
+ .thrift files (containing the definitions) to the language binding for the
+ supported languages.
+
+Package: python-thrift
+Architecture: any
+Section: python
+Depends: ${python:Depends}, ${shlibs:Depends}, ${misc:Depends}
+Recommends: python-twisted-core
+Provides: ${python:Provides}
+Description: Python bindings for Thrift
+ Thrift is a software framework for scalable cross-language services
+ development. It combines a software stack with a code generation engine to
+ build services that work efficiently and seamlessly.
+ .
+ Thrift came out of Facebook and is now an Apache Software Foundation project.
+ .
+ This package contains the Python bindings for Thrift. You will need the thrift
+ tool (in the thrift-compiler package) to compile your definition to Python
+ classes, and then the modules in this package will allow you to use those
+ classes in your programs.
+
+Package: python-thrift-dbg
+Architecture: any
+Section: python
+Depends: ${shlibs:Depends}, ${misc:Depends}, python-thrift (= ${binary:Version}), python-all-dbg
+Provides: ${python:Provides}
+Description: Python bindings for Thrift (debug version)
+ Thrift is a software framework for scalable cross-language services
+ development. It combines a software stack with a code generation engine to
+ build services that work efficiently and seamlessly.
+ .
+ Thrift came out of Facebook and is now an Apache Software Foundation project.
+ .
+ This package contains the Python bindings for Thrift with debugging symbols.
+ You will need the thrift tool (in the thrift-compiler package) to compile your
+ definition to Python classes, and then the modules in this package will allow
+ you to use those classes in your programs.
+
+Package: libthrift-ruby
+Architecture: any
+Section: libs
+Depends: ${shlibs:Depends}, ${misc:Depends}, ruby1.8 (>= 1.8), ruby1.8 (<< 1.9)
+Description: Ruby bindings for Thrift
+ Thrift is a software framework for scalable cross-language services
+ development. It combines a software stack with a code generation engine to
+ build services that work efficiently and seamlessly.
+ .
+ Thrift came out of Facebook and is now an Apache Software Foundation project.
+ .
+ This package contains the Ruby bindings for Thrift. You will need the thrift
+ tool (in the thrift-compiler package) to compile your definition to Ruby
+ classes, and then the modules in this package will allow you to use those
+ classes in your programs.
+
+Package: libthrift-java
+Architecture: all
+Section: libs
+Depends: java-gcj-compat | java1-runtime | java2-runtime, ${misc:Depends}
+Recommends: libcommons-lang-java
+Description: Java bindings for Thrift
+ Thrift is a software framework for scalable cross-language services
+ development. It combines a software stack with a code generation engine to
+ build services that work efficiently and seamlessly.
+ .
+ Thrift came out of Facebook and is now an Apache Software Foundation project.
+ .
+ This package contains the Java bindings for Thrift. You will need the thrift
+ tool (in the thrift-compiler package) to compile your definition to Java
+ classes, and then the modules in this package will allow you to use those
+ classes in your programs.
+
+Package: libthrift-cil
+Architecture: all
+Section: libs
+Depends: cli-common, libmono-corlib1.0-cil (>= 1.0), libmono-system1.0-cil (>= 1.0), ${misc:Depends}
+Description: CLI bindings for Thrift
+ Thrift is a software framework for scalable cross-language services
+ development. It combines a software stack with a code generation engine to
+ build services that work efficiently and seamlessly.
+ .
+ Thrift came out of Facebook and is now an Apache Software Foundation project.
+ .
+ This package contains the CLI bindings for Thrift. You will need the thrift
+ tool (in the thrift-compiler package) to compile your definition to C#
+ classes, and then the modules in this package will allow you to use those
+ classes in your programs.
+
+Package: libthrift-erlang
+Architecture: all
+Section: libs
+Depends: erlang-nox, ${misc:Depends}
+Description: Erlang bindings for Thrift
+ Thrift is a software framework for scalable cross-language services
+ development. It combines a software stack with a code generation engine to
+ build services that work efficiently and seamlessly.
+ .
+ Thrift came out of Facebook and is now an Apache Software Foundation project.
+ .
+ This package contains the Erlang bindings for Thrift. You will need the thrift
+ tool (in the thrift-compiler package) to compile your definition to Erlang
+ classes, and then the modules in this package will allow you to use those
+ classes in your programs.
+
+Package: libthrift-perl
+Architecture: all
+Section: perl
+Depends: perl (>= 5.8.0-7), ${misc:Depends}
+Description: Perl bindings for Thrift
+ Thrift is a software framework for scalable cross-language services
+ development. It combines a software stack with a code generation engine to
+ build services that work efficiently and seamlessly.
+ .
+ Thrift came out of Facebook and is now an Apache Software Foundation project.
+ .
+ This package contains the Perl bindings for Thrift. You will need the thrift
+ tool (in the thrift-compiler package) to compile your definition to Perl
+ classes, and then the modules in this package will allow you to use those
+ classes in your programs.
+
+Package: libthrift0
+Architecture: any
+Depends: ${shlibs:Depends}, ${misc:Depends}
+Description: Thrift C++ library
+ Thrift is a software framework for scalable cross-language services
+ development. It combines a software stack with a code generation engine to
+ build services that work efficiently and seamlessly.
+ .
+ Thrift came out of Facebook and is now an Apache Software Foundation project.
+ .
+ This package contains the runtime libraries needed for C++ applications.
+
+Package: libthrift-dev
+Architecture: any
+Section: libdevel
+Depends: ${shlibs:Depends}, ${misc:Depends}, libthrift0
+Description: Thrift C++ library (development headers)
+ Thrift is a software framework for scalable cross-language services
+ development. It combines a software stack with a code generation engine to
+ build services that work efficiently and seamlessly.
+ .
+ Thrift came out of Facebook and is now an Apache Software Foundation project.
+ .
+ This package contains the development libraries required for writing C++
+ applications.
Index: debian/copyright
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ debian/copyright	2009-02-12 11:20:14.000000000 +0100
@@ -0,0 +1,38 @@
+This package was debianized by Esteve Fernandez <esteve@fluidinfo.com> on
+Sat, 15 Nov 2008 16:53:09 +0100.
+
+It was downloaded from http://incubator.apache.org/thrift/download/
+
+Upstream Author(s): Facebook, Inc.
+
+Copyright: Facebook, Inc.
+
+License:
+
+Thrift Software License
+Copyright (c) 2006- Facebook, Inc.
+
+Permission is hereby granted, free of charge, to any person or organization
+obtaining a copy of the software and accompanying documentation covered by
+this license (the "Software") to use, reproduce, display, distribute,
+execute, and transmit the Software, and to prepare derivative works of the
+Software, and to permit third-parties to whom the Software is furnished to
+do so, all subject to the following:
+
+The copyright notices in the Software and this entire statement, including
+the above license grant, this restriction and the following disclaimer,
+must be included in all copies of the Software, in whole or in part, and
+all derivative works of the Software, unless such copies or derivative
+works are solely in the form of machine-executable object code generated by
+a source language processor.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
+SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
+FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
+ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+DEALINGS IN THE SOFTWARE.
+
+The Debian packaging is (C) 2008, Esteve Fernandez <esteve@fluidinfo.com> and
+is licensed under the BSD, see `/usr/share/common-licenses/BSD'.
Index: debian/dirs
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ debian/dirs	2009-02-12 11:20:14.000000000 +0100
@@ -0,0 +1,2 @@
+usr/bin
+usr/sbin
Index: debian/docs
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ debian/docs	2009-02-12 11:20:14.000000000 +0100
@@ -0,0 +1,2 @@
+NEWS
+README
Index: debian/libthrift-dev.install
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ debian/libthrift-dev.install	2009-02-12 11:20:14.000000000 +0100
@@ -0,0 +1,4 @@
+usr/lib/*.a
+usr/lib/*.la
+usr/lib/pkgconfig
+usr/include
Index: debian/libthrift0.install
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ debian/libthrift0.install	2009-02-12 11:20:14.000000000 +0100
@@ -0,0 +1 @@
+usr/lib/libthrift*.so.*
Index: debian/rules
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ debian/rules	2009-02-12 11:20:14.000000000 +0100
@@ -0,0 +1,196 @@
+#!/usr/bin/make -f
+# -*- makefile -*-
+# Sample debian/rules that uses debhelper.
+#
+# This file was originally written by Joey Hess and Craig Small.
+# As a special exception, when this file is copied by dh-make into a
+# dh-make output file, you may use that output file without restriction.
+# This special exception was added by Craig Small in version 0.37 of dh-make.
+#
+# Modified to make a template file for a multi-binary package with separated
+# build-arch and build-indep targets  by Bill Allombert 2001
+
+# Uncomment this to turn on verbose mode.
+#export DH_VERBOSE=1
+
+# This has to be exported to make some magic below work.
+export DH_OPTIONS
+
+PYVERS := $(shell pyversions -r)
+
+configure: configure-stamp
+configure-stamp:
+	dh_testdir
+	# Add here commands to configure the package.
+	$(CURDIR)/bootstrap.sh
+	$(CURDIR)/configure --prefix=/usr
+
+	touch configure-stamp
+
+
+#Architecture
+build: build-arch build-indep
+	# Tests disabled
+	# $(MAKE) -C test check
+
+build-arch: build-arch-stamp
+build-arch-stamp: configure-stamp
+
+	# Compile compiler
+	$(MAKE) -C $(CURDIR)/compiler/cpp
+
+	# Compile C++ library
+	$(MAKE) -C $(CURDIR)/lib/cpp
+
+	# Python library
+	cd $(CURDIR)/lib/py && \
+    for py in $(PYVERS); do  \
+        $$py setup.py build; \
+        $$py-dbg setup.py build; \
+    done
+
+	# Ruby library
+	cd $(CURDIR)/lib/rb	&& \
+		ruby setup.rb config --installdirs=std && \
+		ruby setup.rb setup
+
+	touch $@
+
+build-indep: build-indep-stamp
+build-indep-stamp: configure-stamp
+
+	# Add here commands to compile the indep part of the package.
+	#$(MAKE) doc
+
+	# Java
+	cd $(CURDIR)/lib/java && \
+		ant
+
+	# Erlang
+	$(MAKE) -C $(CURDIR)/lib/erl
+
+	# C#
+	$(MAKE) -C $(CURDIR)/lib/csharp
+
+	# Perl
+	$(MAKE) -C $(CURDIR)/lib/perl INSTALLDIRS=vendor
+
+	touch $@
+
+clean:
+	dh_testdir
+	dh_testroot
+	rm -f build-arch-stamp build-indep-stamp configure-stamp
+
+	# Add here commands to clean up after the build process.
+	-$(MAKE) clean
+
+	dh_clean
+
+install: install-indep install-arch
+install-indep:
+	dh_testdir
+	dh_testroot
+	dh_clean -k -i
+	dh_installdirs -i
+
+	# Add here commands to install the indep part of the package into
+	# debian/<package>-doc.
+	#INSTALLDOC#
+
+    # Java
+	mkdir -p $(CURDIR)/debian/libthrift-java/usr/share/java/ && \
+	cp $(CURDIR)/lib/java/libthrift.jar \
+		$(CURDIR)/debian/libthrift-java/usr/share/java/
+
+	# Erlang
+	mkdir -p $(CURDIR)/debian/libthrift-erlang/usr/lib/erlang/lib/thrift/ && \
+	cp -r $(CURDIR)/lib/erl/ebin \
+		$(CURDIR)/lib/erl/include \
+		$(CURDIR)/lib/erl/src \
+		$(CURDIR)/debian/libthrift-erlang/usr/lib/erlang/lib/thrift/
+
+	# C#
+	mkdir -p $(CURDIR)/debian/libthrift-cil/usr/lib/cli/thrift/ && \
+	cp $(CURDIR)/lib/csharp/Thrift.dll \
+		$(CURDIR)/debian/libthrift-cil/usr/lib/cli/thrift/Thrift.dll
+
+	# Perl
+	$(MAKE) -C $(CURDIR)/lib/perl install PREFIX=$(CURDIR)/debian/libthrift-perl/usr
+
+	dh_install -i
+
+install-arch:
+	dh_testdir
+	dh_testroot
+	dh_clean -k -s
+	dh_installdirs -s
+
+	# Add here commands to install the arch part of the package into
+	# debian/tmp.
+	#$(MAKE) DESTDIR=$(CURDIR)/debian/thrift install
+
+	#compiler
+	mkdir -p $(CURDIR)/debian/thrift-compiler/usr/bin && \
+	cp $(CURDIR)/compiler/cpp/thrift \
+		$(CURDIR)/debian/thrift-compiler/usr/bin/thrift && \
+	rmdir $(CURDIR)/debian/thrift-compiler/usr/sbin
+
+	#python
+	cd $(CURDIR)/lib/py && \
+	for py in $(PYVERS); do \
+		$$py setup.py install --no-compile --root=$(CURDIR)/debian/python-thrift; \
+		$$py-dbg setup.py install --no-compile --root=$(CURDIR)/debian/python-thrift-dbg; \
+	done
+
+	find $(CURDIR)/debian/python-thrift-dbg -name "*.pyc" -print0 | xargs -0 rm -f
+	find $(CURDIR)/debian/python-thrift-dbg -name "*.py" -print0 | xargs -0 rm -f
+	find $(CURDIR)/debian/python-thrift-dbg -name "*.egg-info" -print0 | xargs -0 rm -f
+	find $(CURDIR)/debian/python-thrift-dbg -depth -type d -empty -exec rmdir {} \;
+
+	#ruby
+	mkdir -p $(CURDIR)/debian/libthrift-ruby && \
+	cd $(CURDIR)/lib/rb && \
+		ruby setup.rb install --prefix=$(CURDIR)/debian/libthrift-ruby
+
+	#cpp
+	mkdir -p $(CURDIR)/debian/tmp; \
+	cd $(CURDIR)/lib/cpp && \
+		make DESTDIR=$(CURDIR)/debian/tmp install
+
+	dh_install --sourcedir=debian/tmp -s
+
+
+# Must not depend on anything. This is to be called by
+# binary-arch/binary-indep
+# in another 'make' thread.
+binary-common:
+	dh_testdir
+	dh_testroot
+	dh_installchangelogs
+	dh_installdocs
+	dh_installexamples
+	dh_installman
+	dh_link
+	dh_strip -Npython-thrift-dbg -Nthrift-compiler -Nlibthrift0 -Nlibthrift-ruby --dbg=python-thrift-dbg
+	dh_strip -Npython-thrift-dbg
+	dh_compress
+	dh_fixperms
+	dh_pysupport
+	dh_makeshlibs
+	dh_installdeb
+	dh_perl
+	dh_shlibdeps
+	dh_gencontrol
+	dh_md5sums
+	dh_builddeb
+# Build architecture independant packages using the common target.
+binary-indep: build-indep install-indep
+	$(MAKE) -f debian/rules DH_OPTIONS=-i binary-common
+
+# Build architecture dependant packages using the common target.
+binary-arch: build-arch install-arch
+	$(MAKE) -f debian/rules DH_OPTIONS=-s binary-common
+
+binary: binary-arch binary-indep
+.PHONY: build clean binary-indep binary-arch binary install install-indep install-arch configure
Index: debian/thrift-doc.docs
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ debian/thrift-doc.docs	2009-02-12 11:20:14.000000000 +0100
@@ -0,0 +1,2 @@
+#DOCS#
+
Index: debian/thrift-doc.install
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ debian/thrift-doc.install	2009-02-12 11:20:14.000000000 +0100
@@ -0,0 +1,2 @@
+#DOCS#
+
